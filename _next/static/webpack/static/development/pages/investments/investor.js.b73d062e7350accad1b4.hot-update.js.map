{"version":3,"file":"static/webpack/static/development/pages/investments/investor.js.b73d062e7350accad1b4.hot-update.js","sources":["webpack:///./components/Investment/TrancheMetric/erc20/Erc20Widget.tsx"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport styled, { ThemeProps as StyledThemeProps, withTheme } from \"styled-components\";\nimport { MarginType, deepMerge} from \"grommet/utils\";\nimport { defaultProps, extendDefaultTheme } from \"grommet/default-props\";\nimport { Button, Box, Form, FormField, TextInput, Image, Text, Select, Drop, Anchor } from \"grommet\";\nimport { copyToClipboard } from \"@centrifuge/axis-utils\";\nimport bigNumber from \"bignumber.js\";\nimport { AxisTheme } from \"@centrifuge/axis-theme\";\n\ninterface ThemeProps {\n  erc20Widget: {\n    margin: MarginType\n  }\n}\n\ninterface Props extends StyledThemeProps<ThemeProps> {\n  value?: bigNumber | string,\n  tokenData: TokenMetadata,\n  balance?: bigNumber,\n  limit?: bigNumber,\n  search?: boolean,\n  precision?: number,\n  fieldLabel?: string,\n  account?: string\n}\n\nexport interface TokenProps {\n  symbol: string,\n  logo: string,\n  address: string,\n  decimals: Number\n}\n\nexport interface TokenMetadata {\n  [address:string] : {\n    name: string,\n    logo: string,\n    symbol: string,\n    decimals: number,\n    erc20?: boolean\n  }\n}\n\nconst defaultThemeProps: ThemeProps = {\n  erc20Widget: {\n    margin: \"small\"\n  }\n};\n\nconst overflowStyle = {\n  whiteSpace: 'nowrap',\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  width: '200px',\n};\n\nconst specialTheme = ({\n  select: {\n    options: {\n      text : {\n        weight:'normal',\n      },\n      container : {\n        align:\"start\"\n      }\n    },\n    icons: {\n      color: \"black\",\n      margin: \"xsmall\",\n    },\n  },\n  formField: {\n    border:  {\n      position: \"outer\",\n      color: \"none\"\n      }, \n    margin: {\n      bottom: \"none\"\n    }\n  },\n  anchor :{\n    color: 'black',\n    textDecoration: 'underline',\n    weight: 'normal',\n    size: 'small'\n    }\n});\n\nconst Circleinfo = styled.svg`\n  fill: black;\n  & :hover {\n    path {\n      fill: black;\n    }\n    cursor: pointer;\n  }\n`;\n\nconst copyIcon = () => {\n  return (\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect x=\"7\" y=\"7\" width=\"8\" height=\"8\" rx=\"2\" stroke=\"#888888\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <path d=\"M3.84615 10H3.23077C2.55103 10 2 9.44897 2 8.76923V3.23077C2 2.55103 2.55103 2 3.23077 2H8.76923C9.44897 2 10 2.55103 10 3.23077V3.84615\" stroke=\"#888888\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n    </svg>\n  );\n}\n\nexport const Erc20Widget: React.FunctionComponent<Props> = (\n  {\n    value,\n    tokenData,\n    search,\n    balance,\n    limit,\n    theme,\n    precision,\n    fieldLabel,\n    account\n  }\n) => {\n\n  var tokens: TokenProps[] = [];\n  for (var k in tokenData) { \n    tokens.push({'address':k, 'logo':tokenData[k]['logo'], 'decimals':tokenData[k]['decimals'],'symbol':tokenData[k]['symbol']})}\n  const [amount, setAmount] = useState(value);\n  const [displayAmount, setDisplayAmount] = useState('');\n  const [selectedToken, setToken] = useState((search) ? undefined : tokens[0]);\n  const [options, setOptions] = useState(tokens);\n  const [showDrop, setDrop] = useState(false);\n  const dropRef = useRef();\n  \n  const renderToken = (token) => {\n    if (token) {\n      return <Box direction=\"row\" align=\"center\" gap=\"small\" pad=\"xsmall\">\n        <Box direction=\"row\" align=\"center\">\n          <Image fit=\"contain\" src={token.logo} />\n        </Box>\n        <Box direction=\"row\" align=\"start\">\n          <Text>{token.symbol}</Text></Box>\n      </Box>\n    }\n    else return undefined\n  }\n\n  const setMax = (value) => {\n    return (\n      <Button plain onClick={() => {\n        setAmount(new bigNumber(value));\n        setDisplayAmount((new bigNumber(value)).toFormat())}}><Text size=\"small\" weight=\"bold\">Set Max</Text></Button>\n    );\n  }\n\n  const validateInput = () => {\n    // Check for invalid characters\n    if (!(/^[0-9,.]*$/.test(displayAmount)))\n    {\n      return \"Invalid Amount\"\n    }\n\n    // Check for amount with too many decimals of precisions for specified token\n    try {\n      if (amount?.toString().replace(/\\.?0+$/, \"\").split('.')[1].length > selectedToken?.decimals) {\n        return \"Invalid Amount\"\n      }\n    }\n    catch {}\n\n    // Check if amount is greater than balance\n    if (amount && balance && (new bigNumber(amount) > balance)) {\n      return \"Invalid Amount\"\n    }\n\n    // Check if amount is greater than limit\n    if (amount && limit && (new bigNumber(amount) > limit)) {\n      return \"Invalid Amount\"\n    }\n\n    if (amount.isNaN()) {\n      return \"Invalid Amount\"\n    }\n  }\n\n  const copyAndHighlight = (id) => {\n    copyToClipboard((amount) ? amount.toString() : \"\");\n    var ref = document.getElementById(\"tokenValue\");\n\n  }\n\n  const updateSearchList = (text) => {\n    // The line below escapes regular expression special characters:\n    // [ \\ ^ $ . | ? * + ( )\n    const escapedText = text.replace(/[-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n    const exp = new RegExp(escapedText, \"i\");\n    setOptions(options.filter(o => exp.test(o.symbol)));\n  }\n\n  const renderAddress = () => {\n    return (\n      <Box direction=\"row\">\n        <Text style={overflowStyle}>Account: {account}</Text>\n        <Box onClick={() => copyToClipboard(account)}>{copyIcon()}</Box>\n      </Box>\n    )\n  }\n\n  const renderDisplayAmount = (newAmount) => {\n    if (!(/^[0-9,.]*$/.test(newAmount))){\n      setDisplayAmount(newAmount);\n    }\n    else if ((newAmount[newAmount.length-1] == '.') || (newAmount[newAmount.length-1] == '0')){\n      setDisplayAmount(newAmount);\n    }\n    else {\n      var newValue = newAmount.replace(/,/g,'');\n      setAmount(new bigNumber(newValue));\n      setDisplayAmount((new bigNumber(newValue)).toFormat());\n    }\n  }  \n  \n\n  return (\n    <AxisTheme theme={specialTheme}>\n      <Box direction=\"column\" align=\"start\" style={{ width: tokens.length > 1 ? \"336px\" : \"284px\"}}>\n        { /* Optional Field Label and Information Icon */}\n        <Box direction=\"row-responsive\" justify=\"between\" gap=\"xsmall\" ref={dropRef} fill=\"horizontal\">\n          <Text style={{fontSize:\"small\"}}>{fieldLabel}</Text>\n            <Circleinfo onClick={() => (selectedToken ? setDrop(true) : undefined)}\n            width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M8.00008 15.3333C3.93341 15.3333 0.666748 12.0666 0.666748 7.99996C0.666748 3.93329 3.93341 0.666626 8.00008 0.666626C12.0667 0.666626 15.3334 3.93329 15.3334 7.99996C15.3334 12.0666 12.0667 15.3333 8.00008 15.3333ZM8.00008 1.99996C4.66675 1.99996 2.00008 4.66663 2.00008 7.99996C2.00008 11.3333 4.66675 14 8.00008 14C11.3334 14 14.0001 11.3333 14.0001 7.99996C14.0001 4.66663 11.3334 1.99996 8.00008 1.99996Z\" fill=\"#EEEEEE\"/>\n            <path d=\"M7.99992 11.3334C7.59992 11.3334 7.33325 11.0667 7.33325 10.6667V8.00004C7.33325 7.60004 7.59992 7.33337 7.99992 7.33337C8.39992 7.33337 8.66659 7.60004 8.66659 8.00004V10.6667C8.66659 11.0667 8.39992 11.3334 7.99992 11.3334Z\" fill=\"#EEEEEE\"/>\n            <path d=\"M7.99992 5.99996C7.79992 5.99996 7.66659 5.93329 7.53325 5.79996C7.39992 5.66663 7.33325 5.53329 7.33325 5.33329C7.33325 5.13329 7.39992 4.99996 7.53325 4.86663C7.79992 4.59996 8.19992 4.59996 8.46659 4.86663C8.59992 4.99996 8.66659 5.13329 8.66659 5.33329C8.66659 5.53329 8.59992 5.66663 8.46659 5.79996C8.33325 5.93329 8.19992 5.99996 7.99992 5.99996Z\" fill=\"#EEEEEE\"/>\n            </Circleinfo>\n          {showDrop && <Drop\n            stretch={false}\n            pad=\"small\"\n            onClickOutside={() => setDrop(false)}\n            target={dropRef.current}\n            align={{ right: \"right\" }}\n          ><Box direction=\"column\">\n              {account && <Text>ERC20 Token Balance</Text>}\n              {account && renderAddress()}\n              <Text>Token: {selectedToken?.symbol}</Text>\n              <Box direction=\"row\"><Anchor href={\"https://etherscan.io/token/\" + selectedToken?.address} label=\"View Token\" />&nbsp;on Etherscan</Box>\n            </Box>\n          </Drop>}\n        </Box>\n\n\n        <Box direction=\"row-responsive\" gap=\"xxsmall\" justify=\"between\" fill=\"horizontal\">\n\n          { /* Input Field for Token Balance */}\n          {!value && <Box direction=\"row\" style={{ borderBottom: \"1px solid black\"}}><Form>\n            <FormField\n              validate={() => validateInput()}>\n              <TextInput\n                style={{ minWidth: \"212px\" }}\n                placeholder=\"100,000,000.000\"\n                value={displayAmount}\n                onChange={event => renderDisplayAmount(event.target.value)\n                }\n              />\n            </FormField>\n          </Form></Box>}\n\n          { /* Amount Display for Token Balance */}\n          {value &&\n            <Box flex=\"shrink\" direction=\"row\" style={{ borderBottom: \"1px solid #EEEEEE\", alignItems: \"center\" }} onClick={(event) => {\n              if (event.detail == 2) {\n                copyAndHighlight(\"tokenValue\");\n              }\n            }}>\n              <Text style={{ width: \"212px\" }} \n                truncate={true} \n                id=\"tokenValue\">\n                  {(precision) ? new bigNumber(value).toFormat(precision) + \n                  ((value.toString().includes('.') && (value.toString().split('.')[1].length > precision)) ? 'â€¦' : '')\n                  : new bigNumber(value).toFormat()}\n              </Text>\n            </Box>}\n\n\n          { /* Token Icon/Ticker Display */}\n          {tokens.length == 1 && <Box fill=\"horizontal\" direction=\"row\" gap=\"small\" align=\"center\"\n            border={{\n              side: 'bottom',\n              color: (value) ? '#EEEEEE' : \"black\"\n            }}\n            style={{ width: \"72\", maxWidth: \"100px\", borderLeft: (!value ? '1px solid #EEEEEE' : undefined) }}>\n            {renderToken(selectedToken)}\n          </Box>}\n\n          { /* Token Drop-down if multiple tokens specified */}\n          {tokens.length > 1 && <Box direction=\"row\" gap=\"small\" align=\"end\"\n            fill=\"horizontal\"\n            style={{ width: \"120px\", alignContent: \"end\", borderLeft: '1px solid #EEEEEE', borderBottom: '1px solid black' }}>\n            <Select plain\n              children={renderToken}\n              options={tokens}\n              value={value}\n              labelKey=\"label\"\n              onChange={({ option }) => setToken(option)}\n              valueLabel={renderToken(selectedToken)}\n              onClose={() => (search ? setOptions(tokens) : undefined)}\n              searchPlaceholder={(search ? \"Search\" : undefined)}\n              onSearch={search ? text => updateSearchList(text) : undefined}\n            /></Box>}\n        </Box>\n\n        { /* Balance/Limit if specified */}\n        {(balance || limit) && <Box direction=\"row\" alignSelf=\"end\" gap=\"small\" >\n          {balance ? <Text size=\"small\" alignSelf=\"end\" truncate={true}>Balance : {new bigNumber(balance).toFormat()}</Text> :\n            <Text size=\"small\" alignSelf=\"end\" truncate={true}>Limit : {new bigNumber(limit).toFormat()}</Text>}\n          {balance ? setMax(balance) : setMax(limit)}\n        </Box>}\n\n      </Box>\n    </AxisTheme>\n  );\n};\n\nextendDefaultTheme(defaultThemeProps);\n\nErc20Widget.defaultProps = {\n  tokens: [\n    {\n      symbol: \"DAI\",\n      logo: \"\",\n      address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n      decimals: 12\n    }\n  ],\n  ...defaultProps\n};\n\nexport default withTheme(Erc20Widget)\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAoCA;AACA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AAQA;AACA;AACA;AAFA;AATA;AAcA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AALA;AASA;AACA;AACA;AACA;AACA;AAJA;AAxBA;AAgCA;AACA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAFA;AAYA;;;;A","sourceRoot":""}